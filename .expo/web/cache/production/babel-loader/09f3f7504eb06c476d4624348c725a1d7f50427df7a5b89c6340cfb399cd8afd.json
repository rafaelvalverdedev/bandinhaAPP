{"ast":null,"code":"import getDevServer from'./getDevServer';export function buildUrlForBundle(bundlePath){if(/^https?:\\/\\//.test(bundlePath)){return bundlePath;}const{url:baseURL}=getDevServer();return baseURL?new URL(bundlePath,baseURL).toString():`//${bundlePath.replace(/^\\/+/,'')}`;}","map":{"version":3,"names":["getDevServer","buildUrlForBundle","bundlePath","test","url","baseURL","URL","toString","replace"],"sources":["C:/Users/BOSCH/Projetos/bandinhaAPP/node_modules/expo/src/async-require/buildUrlForBundle.ts"],"sourcesContent":["/**\n * Copyright Â© 2022 650 Industries.\n *\n * This source code is licensed under the MIT license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nimport getDevServer from './getDevServer';\n\n/**\n * Given a path and some optional additional query parameters, create the dev server bundle URL.\n * @param bundlePath like `/foobar`\n * @param params like `{ platform: \"web\" }`\n * @returns a URL like \"/foobar.bundle?platform=android&modulesOnly=true&runModule=false&runtimeBytecodeVersion=null\"\n */\nexport function buildUrlForBundle(bundlePath: string): string {\n  if (/^https?:\\/\\//.test(bundlePath)) {\n    return bundlePath;\n  }\n  const { url: baseURL } = getDevServer();\n  return baseURL ? new URL(bundlePath, baseURL).toString() : `//${bundlePath.replace(/^\\/+/, '')}`;\n}\n"],"mappings":"AAOA,MAAO,CAAAA,YAAY,KAAM,gBAAgB,CAQzC,MAAO,SAAS,CAAAC,iBAAiBA,CAACC,UAAkB,CAAU,CAC5D,GAAI,cAAc,CAACC,IAAI,CAACD,UAAU,CAAC,CAAE,CACnC,MAAO,CAAAA,UAAU,CACnB,CACA,KAAM,CAAEE,GAAG,CAAEC,OAAQ,CAAC,CAAGL,YAAY,CAAC,CAAC,CACvC,MAAO,CAAAK,OAAO,CAAG,GAAI,CAAAC,GAAG,CAACJ,UAAU,CAAEG,OAAO,CAAC,CAACE,QAAQ,CAAC,CAAC,CAAG,KAAKL,UAAU,CAACM,OAAO,CAAC,MAAM,CAAE,EAAE,CAAC,EAAE,CAClG","ignoreList":[]},"metadata":{"hasCjsExports":false},"sourceType":"module","externalDependencies":[]}