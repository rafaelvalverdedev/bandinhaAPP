{"ast":null,"code":"export async function fetchAsync(url){const response=await fetch(url,{method:'GET',headers:{'expo-platform':'web'}});return{body:await response.text(),status:response.status,headers:response.headers};}","map":{"version":3,"names":["fetchAsync","url","response","fetch","method","headers","body","text","status"],"sources":["C:/Users/BOSCH/Projetos/bandinhaAPP/node_modules/expo/src/async-require/fetchAsync.ts"],"sourcesContent":["/**\n * Copyright Â© 2022 650 Industries.\n *\n * This source code is licensed under the MIT license found in the\n * LICENSE file in the root directory of this source tree.\n */\nexport async function fetchAsync(\n  url: string\n): Promise<{ body: string; status: number; headers: Headers }> {\n  const response = await fetch(url, {\n    method: 'GET',\n    headers: {\n      // No real reason for this but we try to use this format for everything.\n      'expo-platform': 'web',\n    },\n  });\n  return {\n    body: await response.text(),\n    status: response.status,\n    headers: response.headers,\n  };\n}\n"],"mappings":"AAMA,MAAO,eAAe,CAAAA,UAAUA,CAC9BC,GAAW,CACkD,CAC7D,KAAM,CAAAC,QAAQ,CAAG,KAAM,CAAAC,KAAK,CAACF,GAAG,CAAE,CAChCG,MAAM,CAAE,KAAK,CACbC,OAAO,CAAE,CAEP,eAAe,CAAE,KACnB,CACF,CAAC,CAAC,CACF,MAAO,CACLC,IAAI,CAAE,KAAM,CAAAJ,QAAQ,CAACK,IAAI,CAAC,CAAC,CAC3BC,MAAM,CAAEN,QAAQ,CAACM,MAAM,CACvBH,OAAO,CAAEH,QAAQ,CAACG,OACpB,CAAC,CACH","ignoreList":[]},"metadata":{"hasCjsExports":false},"sourceType":"module","externalDependencies":[]}